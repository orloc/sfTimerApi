<?php
namespace EQT\Api\Controller;

use Doctrine\DBAL\Connection;
use EQT\Api\Entity\Timer;
use Silex\Application;
use Silex\Api\ControllerProviderInterface;
use Symfony\Component\HttpFoundation\Request;

class TimerGroupController extends AbstractCRUDController implements ControllerProviderInterface {

    public function connect(Application $app){
        $controllers = $app['controllers_factory'];
        $controllers->get('/timer-group', [$this, 'all']);
        $controllers->get('/timer-group/{id}', [$this, 'getBy']);

        $controllers->post('/timer-group', [$this,'create']);
        $controllers->patch('/timer-group/{id}', [$this,'update']);
        $controllers->delete('/timer-group/{id}', [$this, 'delete']);

        return $controllers;
    }
    
    public function all(Request $request, $imposedFilters = []) {
        $user = $this->jwtAuthenticator->getCredentials($request);
        
        return parent::all($request, [ 'created_by' => $user['id']]); 
    }
    
    public function getBy(Request $request, $id)
    {
        $user = $this->jwtAuthenticator->getCredentials($request);
        return parent::getBy($request, $id); // TODO: Change the autogenerated stub
    }
    
    public function beforeDelete($id){
        $existingTimers = Timer::all($this->db, ['timer_group_id' => $id]);
        
        $ids = array_map(function($timer){
            return intval($timer['id']);
        }, $existingTimers);
        
        $this->db->executeQuery("update timers set deleted_at=NOW() where id in (?)",
            [$ids], [Connection::PARAM_INT_ARRAY]);
    }

    public function create(Request $request) {
        $user = $this->jwtAuthenticator->getCredentials($request);
        $content = $request->request->all();
        
        $request->request->replace(array_merge($content, [ 'created_by' => $user['id']]));
        
        return parent::create($request);
    }

}
